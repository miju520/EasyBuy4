<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
	http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc.xsd">	 
	<aop:aspectj-autoproxy />
	
	<!-- 创建spring框架提供的数据源对象 -->
	<bean name="abc" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
		<property name="url" value="jdbc:mysql://localhost:3306/easybuy"></property>
		<property name="username" value="root"></property>
		<property name="password" value="666666"></property>
	</bean>
	
	<!-- 创建spring和mybatis整合后用的工厂对象 -->
	<bean id="fact" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="abc"></property>
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
	</bean>
	
	<!-- mapper扫描器，来创建dao接口的实现类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.xkit.easybuy.dao"></property>
		<property name="sqlSessionFactoryBeanName" value="fact"></property>
	</bean>
	<!-- 创建业务层对象 -->
	<context:component-scan base-package="com.xkit.easybuy.service"></context:component-scan>
    
    <!-- 创建spring事务 -->
	<bean id="trans" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="abc"></property>
	</bean>
	<!-- 事务级别 -->
	<tx:advice id="txAdvice" transaction-manager="trans">
		<tx:attributes>
		    <tx:method name="Login" propagation="REQUIRED"/>
			<tx:method name="insert" propagation="REQUIRED"/>
			<tx:method name="selectaddress" propagation="REQUIRED"/>
			<tx:method name="delete" propagation="REQUIRED"/>
			<tx:method name="update" propagation="REQUIRED"/>
			<tx:method name="*" read-only="true" propagation="SUPPORTS"/>
		</tx:attributes>
	</tx:advice>
	<!-- 将切入点和事务组合 -->
	<aop:config>
		<aop:pointcut expression="execution(* com.xkit.easybuy.service.*.*(..))" id="pc"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="pc" />
	</aop:config>	
	
	<context:component-scan base-package="com.xkit.easybuy"></context:component-scan>
    <!-- 负责将方法和请求url对应 映射器适配器 -->
    <mvc:annotation-driven conversion-service="myConversionService">
         <!-- 配置解决乱码 (阿里巴巴提供的消息转换器)-->
         <mvc:message-converters>
              <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                   <property name="supportedMediaTypes">
                        <list>
                           <value>application/json;charset=UTF-8</value>
                           <value>text/plain;charset=UTF-8</value>
                        </list>
                   </property>
                   <property name="features">
                        <list>
                             <value>WriteDateUseDateFormat</value>
                        </list>
                   </property>
              </bean>
         </mvc:message-converters>

    </mvc:annotation-driven>
    <!-- 视图解析器 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/"></property>
        <property name="suffix" value=".jsp"></property>
    </bean>
    <!-- 配置全局异常处理器 -->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
         <property name="exceptionMappings">
               <props>
                    <prop key="java.lang.Exception">error</prop>
               </props> 
         </property>
    </bean>
    <!-- 配置文件上传解析器 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
         <property name="maxUploadSize">
             <value>5242880</value>
         </property>
    </bean>
    
    <mvc:resources location="/js/" mapping="/js/**" />
    <mvc:resources location="/css/" mapping="/css/**" />
    <mvc:resources location="/images/" mapping="/images/**" />
    <mvc:resources location="/photo/" mapping="/photo/**" />
    
    <!-- 配置到springmvc的转换器工厂对象的 converters属性中 -->
    <bean id="myConversionService" class="org.springframework.context.support.ConversionServiceFactoryBean">
        <property name="converters">
    		<list>
    			<bean class="com.xkit.easybuy.convert.MyConvert"></bean>
    		</list>
    	</property>
    </bean>

	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/manage/main.jsp" />
			<!-- 排除拦截的链接 -->
			<mvc:exclude-mapping path="/Login.jsp" />
			<bean class="com.xkit.easybuy.interceptor.MyInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>
</beans>
